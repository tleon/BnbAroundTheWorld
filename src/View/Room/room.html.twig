{% extends 'layout.html.twig' %}

{% block title %}Chambre{% endblock %}
{% block stylesheet %}
<link href="/assets/css/room.css" rel="stylesheet">
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
{% endblock %}

{% block content %}
<div class="container">
  <div class="room">
    <div class="images">
      <img class="img-hightlight" src="/assets/images/{{ room.pic_path }}" alt="room1" />
      <div class="room-preview">
        <img src="/assets/images/{{ room.pic_path }}" class="room-active border_radius_left" alt="" />
        <img src="/assets/images/france.png" alt="" />
        <img src="/assets/images/paralax-photo.jpeg" alt="" class="border_radius_right" />
      </div>
    </div>

    <form method="post" class="formulaire">
      <input name="room_id" class="room_id" value="{{room.id}}" hidden></input>
      <div class="room_form_date_picker">
        <label class="room_form_select_label">
          <span>dates de sejour</span>
        </label>
        <input type="text" class="flatpickr-calendar" name="date">
      </div>

      <div class="room_form_select1">
        <label class="index_form_select_labet">
          <span>nombre de personnes</span>
        </label>
        <select name="nb_person">
          <option value="" disabled>Choisir le nombre de personnes</option>
          <option value="1" {{session.booking.nbGuestSelected.1}}>1</option>
          <option value="2" {{session.booking.nbGuestSelected.2}}>2</option>
          <option value="3" {{session.booking.nbGuestSelected.3}}>3</option>
          <option value="4" {{session.booking.nbGuestSelected.4}}>4</option>
        </select>
        {{ errors.nb_person }}
      </div>


      <div class="room_form_select2">
        <label class="index_form_select_labet">
          <span>Options possibles</span>
        </label>
        <input type="hidden" id="hidden" value="" name="options">
        <select id="select-opt" multiple>
          <option value="Petit déjeuner">Petit déjeuner</option>
          <option value="Table d'hôte">Table d'hôte</option>
          <option value="baby1">1 Lit bébé</option>
          <option value="baby2">2 Lit bébé</option>
          <option value="none">Aucune option</option>
        </select>
        {{ errors.options }}
      </div>

      <div class="room_form_submit">
        <button type="submit" id="submit-btn" value="submit" class="custom_btn">Je reserve</button>
      </div>
    </form>
    <div class="description">
      <h1>Chambre {{ room.name }}</h1>
      <!-- Tabs -->


      <div class="tab_parent">
        <ul class="tabs">
          <li class="tab col s3"><a class="active" href="#tab1">Description</a></li>
          <li class="tab col s3"><a href="#tab2">Caractéristiques</a></li>
          <li class="tab col s3"><a href="#tab3">Options</a></li>
        </ul>
      </div>
      <div id="tab1" class="col s12">
        <p>{{ room.description }}</p>
      </div>
      <div id="tab2" class="col s12">
        <p>{{ room.caracs }}</p>
        <ul>
          {% for carac in caracs %}
          {% if carac == 'dej' %}
          <li>Petit Déjeuné</li>
          {% endif %}
          {% if carac == 'separateBed' %}
          <li>Lits séparés</li>
          {% endif %}
          {% if carac == 'repas' %}
          <li>Table d'hôte</li>
          {% endif %}
          {% endfor %}
        </ul>
      </div>
      <div id="tab3" class="col s12">
        <span>Options</span>
      </div>
    </div>
    
    <div class="commentaire">
      <div class="card opinion">
        <div class="card-content">
          <div class="stars">
            <img src="/assets/images/star.png">
            <img src="/assets/images/star.png">
            <img src="/assets/images/star.png">
          </div>
          <div class="opinion-text">
            <p>Lorem Ipsum est un texte d'espace réservé couramment utilisé dans les industries graphique, imprimée et
              éditoriale pour prévisualiser les mises en page et les maquettes visuelles.
            </p>
          </div>
          <div class="author">
            <span class="author-opinion">Toto</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

{% endblock %}


{% block javascript %}
<script src="/assets/js/datePicker.js"></script>
<script src="https://js.stripe.com/v3/"></script>

<script>

  var stripe = Stripe('pk_test_TYooMQauvdEDq54NiTphI7jx');

// Create an instance of Elements.
var elements = stripe.elements();

// Custom styling can be passed to options when creating an Element.
// (Note that this demo uses a wider set of styles than the guide below.)
var style = {
  base: {
    color: '#32325d',
    fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
    fontSmoothing: 'antialiased',
    fontSize: '16px',
    '::placeholder': {
      color: '#aab7c4'
    }
  },
  invalid: {
    color: '#fa755a',
    iconColor: '#fa755a'
  }
};

// Create an instance of the card Element.
var card = elements.create('card', {style: style});

// Add an instance of the card Element into the `card-element` <div>.
card.mount('#card-element');

// Handle real-time validation errors from the card Element.
card.addEventListener('change', function(event) {
  var displayError = document.getElementById('card-errors');
  if (event.error) {
    displayError.textContent = event.error.message;
  } else {
    displayError.textContent = '';
  }
});

// Handle form submission.
var form = document.getElementById('payment-form');
form.addEventListener('submit', function(event) {
  event.preventDefault();

  stripe.createToken(card).then(function(result) {
    if (result.error) {
      // Inform the user if there was an error.
      var errorElement = document.getElementById('card-errors');
      errorElement.textContent = result.error.message;
    } else {
      // Send the token to your server.
      stripeTokenHandler(result.token);
    }
  });
});

// Submit the form with the token ID.
function stripeTokenHandler(token) {
  // Insert the token ID into the form so it gets submitted to the server
  var form = document.getElementById('payment-form');
  var hiddenInput = document.createElement('input');
  hiddenInput.setAttribute('type', 'hidden');
  hiddenInput.setAttribute('name', 'stripeToken');
  hiddenInput.setAttribute('value', token.id);
  form.appendChild(hiddenInput);

  // Submit the form
  form.submit();
}
 

  function imageGallery() {
    const highlight = document.querySelector(".img-hightlight");
    const previews = document.querySelectorAll(".room-preview img");

    previews.forEach(preview => {
      preview.addEventListener("click", function () {
        let smallSrc = this.src;
        let bigSrc = highlight.src;
        highlight.src = smallSrc;
        previews.forEach(preview => preview.classList.remove("room-active"));
        preview.classList.add("room-active");
      });
    });
  }
  imageGallery();
</script>

<script>
  // Tabs 
  $(document).ready(function () {
    $('.tabs').tabs();
    //this is code is most likly very bad. As D.trump would say, "Horrible, awefull, totally not good". And of as zfg would say "Anyway ....."
    $('#select-opt').on('change', function() {
      let a = $('#select-opt').formSelect()[0].selectedOptions;
      let options = ""
      for (let item of a) {
        options += " " + item.value
      }
      $('#hidden')[0].value = options;
    });
  });
</script>
{% endblock %}